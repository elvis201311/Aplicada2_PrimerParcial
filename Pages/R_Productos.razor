@page "/Rproductos"

@using PrimerParcial.Models
@using PrimerParcial.BLL

@inject IToastService Toast

<EditForm Model="producto" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    
    <div class="card">
        <div class="card-header">
            <h3>Registro de Producto</h3>
        </div>

        <div class="container">
            <form>

                @*ProductoId*@
                <div class="form-group">
                    <label> Producto Id</label>
                    <div class="input-group">
                        <input type="number" @bind="producto.ProductoId" class="form-control"/>
                        <div class="input-group-append">
                            <button type="button" class="btn btn-info input-group-text" @onclick="Buscar"> Buscar</button>
                        </div>
                    </div>
                </div>

                @*Descripción*@
                <div class="form-group">
                    <label>Descripción</label>
                    <InputText @bind-Value="producto.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => producto.Descripcion)" />
                </div>
                
                @*Existencia*@
                <div class="form-group">
                    <label>Existencia</label>
                    <InputNumber @bind-Value="producto.Existencia" @onfocusout="Cambio" class="form-control" />
                    <ValidationMessage For="@(() => producto.Existencia)" />
                </div>

                @*Costo*@
                <div class="form-group">
                    <label>Costo</label>
                    <InputNumber @bind-Value="producto.Costo" @onfocusout="Cambio" class="form-control" />
                    <ValidationMessage For="@(() => producto.Costo)" />
                </div>

                @*ValorInventario*@
                <div class="form-group">
                    <label>Valor Inventario</label>
                    <InputNumber @bind-Value="producto.ValorInventario" readonly="True" class="form-control" />
                    <ValidationMessage For="@(() => producto.ValorInventario)" />
                </div>
            </form>
        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
    
</EditForm>

@code {
    Productos producto = new Productos();

    [Parameter]
    public int ProductoId { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
        BuscarParametro();
    }
    public void BuscarParametro()
    {
        if(ProductoId > 0)
        {
            var encontrado = ProductosBLL.Buscar(ProductoId);

            if (encontrado != null)
                this.producto = encontrado;
            else
                Toast.ShowWarning("No encontrado");
        }
    }

    public void Nuevo()
    {
        producto = new Productos();
    }

    public void Guardar()
    {
        bool guardo;

        guardo = ProductosBLL.Guardar(producto);

        if (guardo)
        {
            Nuevo();
            Toast.ShowSuccess("Guardado correctamente");
        }
        else
            Toast.ShowWarning("No fue posible guardar");
    }

    public void Buscar()
    {
        if(producto.ProductoId > 0)
        {
            var encontrado = ProductosBLL.Buscar(producto.ProductoId);

            if (encontrado != null)
                this.producto = encontrado;
            else
                Toast.ShowWarning("No encontrado");
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = ProductosBLL.Eliminar(producto.ProductoId);

        if (elimino)
        {
            Nuevo();
            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");
    }

    public void Cambio()
    {
        producto.ValorInventario = producto.Costo * producto.Existencia;       
    }
}